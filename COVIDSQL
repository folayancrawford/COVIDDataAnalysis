/* COVID Data Exploration

Purpose: The purpose of this project is to analyze COVID infection, death, and vaccination
rates segmented by country, continent, date, and socio-economic level.

Skills Used: SQL, Aggregate Functions, CTE, JOIN

*/

SELECT * FROM dbo.CovidDeaths
	ORDER BY 3,4
	;

SELECT * FROM dbo.CovidVac
	--WHERE continent is null
	ORDER BY 3,4;

--Calculate of total deaths to total cases for each country
--Shows how likely you are to die from COVID per country per day
SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS death_percentage
FROM dbo.CovidDeaths
WHERE continent is not null
ORDER BY 1,2;

--Calculate death rate for each country
SELECT Location, MAX(total_cases) AS total_cases, MAX(population) AS population,
	MAX(CAST(total_deaths AS int)) AS total_deaths,
	MAX(CAST(total_deaths AS int))/MAX(population)*100 AS death_percentage
FROM dbo.CovidDeaths
WHERE continent is not null
GROUP BY location
ORDER BY 1,2
;

--Infection rates as calculated by number of cases per day per population
SELECT Location, date, total_cases, population, (total_cases/population)*100 AS cases_population_percentage
FROM dbo.CovidDeaths
WHERE continent is not null
ORDER BY 1,2;

--Countries with highest infection rates
SELECT location, MAX(total_cases) AS max_cases, population, MAX(total_cases)/population*100 AS cases_population_percentage
FROM dbo.CovidDeaths
WHERE continent is not null
GROUP BY location, population
ORDER BY 4 DESC;

--Countries with highest death rates
SELECT location, MAX(CAST (total_deaths as int)) AS max_deaths, population, MAX((total_deaths/population)*100) AS deaths_population_percentage
FROM dbo.CovidDeaths
WHERE continent is not null
GROUP BY location, population
ORDER BY 4 DESC;

--Continents with highest death rates
SELECT continent, location, MAX(CAST (total_deaths as int)) AS max_deaths, population, MAX((total_deaths/population)*100) AS deaths_population_percentage
FROM dbo.CovidDeaths
WHERE continent is null
GROUP BY continent, location, population
ORDER BY 4 DESC;

-- Worldwide cases per day
SELECT date, SUM (cast(new_cases AS int)) AS cases
FROM dbo.CovidDeaths
WHERE continent is not null
GROUP BY date
ORDER BY 1;

-- Worldwide death rate per day as a percentage
SELECT date, SUM (cast(new_cases AS int)) AS cases, SUM(CAST(new_deaths as int)) AS deaths,
SUM(CAST(new_deaths as int))/SUM(new_cases)*100 AS death_rate
FROM dbo.CovidDeaths
WHERE continent is not null
GROUP BY date
ORDER BY 1;

-- Total worldwide death rate as a percentage
SELECT SUM (cast(new_cases AS int)) AS cases, SUM(CAST(new_deaths as int)) AS deaths,
SUM(CAST(new_deaths as int))/SUM(new_cases)*100 AS death_rate
FROM dbo.CovidDeaths
WHERE continent is not null
ORDER BY 1;



/*
ADD IN VACCINATION DATA/TABLE
*/

/* A *wonderful* data learning point was made when I was 
checking data at the end, and realized that I had been taking the number 
of vaccinations to be the number of people vaccinated. There was overlap once
people began receiving their 2nd dose, third dose, boosters etc. Very different numbers.
Played around with calulations and realized that a different field was neeeded.
*/

--Join the two tables together on location and date
SELECT * FROM dbo.CovidDeaths Deaths
JOIN dbo.CovidVac Vacs
	ON Deaths.location = Vacs.location
	AND Deaths.date = Vacs.date;

-- New vaccination numbers for each country
SELECT Deaths.location, Deaths.date, Deaths.population,
Vacs.new_vaccinations
FROM dbo.CovidDeaths Deaths
JOIN dbo.CovidVac Vacs
	ON Deaths.location = Vacs.location
	AND Deaths.date = Vacs.date
	WHERE Deaths.continent is not null
ORDER BY 1,2;

-- Calculate running total of vaccinations per country usng a partition over location
SELECT Deaths.location, Deaths.date, Deaths.population,Vacs.new_vaccinations,
SUM(CONVERT(bigint,Vacs.new_vaccinations)) OVER (Partition BY Deaths.location
ORDER BY Deaths.date)
FROM dbo.CovidDeaths Deaths
JOIN dbo.CovidVac Vacs
	ON Deaths.location = Vacs.location
	AND Deaths.date = Vacs.date
	WHERE Deaths.continent is not null
ORDER BY 1,2;


-- Calculate rolling number of vaccinated poeple and rolling vaccination rate for each country using CTE
--Must use people_vaccinated and not new_vaccinations here to account for multiple dosing and boosters.
WITH PopVacCTE(continent, location, date, population, people_vaccinated, roll_vac_ppl)

AS (

SELECT Deaths.continent, Deaths.location, Deaths.date, Deaths.population,CAST(Vacs.people_vaccinated AS bigint),
MAX(CONVERT(bigint,Vacs.people_vaccinated)) OVER (Partition BY Deaths.location
ORDER BY Deaths.date) AS roll_people_vaccinated
FROM dbo.CovidDeaths Deaths
JOIN dbo.CovidVac Vacs
	ON Deaths.location = Vacs.location
	AND Deaths.date = Vacs.date
	WHERE Deaths.continent is not null)


--USE CTE 
SELECT *,CONVERT(bigint,roll_vac_ppl)/population*100 AS vac_rate
FROM PopVacCTE
ORDER BY 1,2

-- Calculate total vaccination rate for each country 
SELECT Deaths.continent, Deaths.location,Deaths.population, MAX(CAST(Vacs.people_vaccinated AS bigint)) AS total_vacs,
MAX(CAST(Vacs.people_vaccinated AS bigint))/Deaths.population*100 AS vac_rate
FROM dbo.CovidDeaths Deaths
JOIN dbo.CovidVac Vacs
	ON Deaths.location = Vacs.location
	AND Deaths.date = Vacs.date
	WHERE Deaths.continent is not null
GROUP BY Deaths.continent, Deaths.location,Deaths.population
ORDER BY 5 DESC

-- Calculate total vaccination rate for each continent 
SELECT Deaths.continent, Deaths.location,Deaths.population, MAX(total_vaccinations) AS total_vacs, 
MAX(total_vaccinations)/Deaths.population*100 AS vac_rate
FROM dbo.CovidDeaths Deaths
JOIN dbo.CovidVac Vacs
	ON Deaths.location = Vacs.location
	AND Deaths.date = Vacs.date
	WHERE Deaths.continent is null
GROUP BY Deaths.continent, Deaths.location,Deaths.population
